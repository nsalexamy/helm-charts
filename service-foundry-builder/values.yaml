# Default values for service-foundry-builder.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # this will be public docker image later.
  repository: credemol/service-foundry-builder
  # This sets the pull policy for images.
#  pullPolicy: IfNotPresent
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # use the appVersion from Chart.yaml
  #tag: 0.1.8

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

restartPolicy: Never

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
#volumes: []
volumes:
  - name: service-foundry-github-ssh
    secret:
      secretName: service-foundry-github-ssh
      optional: false
  - name: service-foundry-config-files
    secret:
      secretName: service-foundry-config-files
      optional: false
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
#volumeMounts: []
volumeMounts:
  - name: service-foundry-github-ssh
    mountPath: /opt/nsa2/github-ssh
    readOnly: true
  - name: service-foundry-config-files
    mountPath: /opt/nsa2/service-foundry/config-files
    readOnly: false # bootstrap script will write to this directory
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Elastic Kubernetes Service (EKS) Cluster Name
aws:
  # AWS_REGION, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_ACCOUNT_ID
  awsSecretName: "aws-secret"
#  eksClusterName: "young-eks"
  envs: []
  awsConfigMapName: "aws-config"
#  envs:
#    - name: EKS_CLUSTER_NAME
#      value: young-eks
azure:
#  azureSecretName: "azure-secret"
#  azureConfigMapName: "azure-config"
  envs: []

# command can be 'deploy' or 'clean'
command: deploy

#extraEnvs:
extraEnvs:
#  - name: TF_VAR_aws_region
#    valueFrom:
#      secretKeyRef:
#        name: aws-secret
#        key: AWS_REGION
#  - name:  TF_VAR_eks_cluster_name
#    value: young-eks
  - name: PLACEHOLDER_ENV_VAR
    value: placeholder-value-for-later-use

envFrom:
  - secretRef:
      name: service-foundry-builder-secret
      optional: true
  - configMapRef:
      name: service-foundry-builder-configmap
      optional: true
  - secretRef:
      name: aws-secret
      optional: true
  - configMapRef:
      name: aws-configmap
      optional: true




